plugins {
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.openjfx.javafxplugin'

    def globalConfigurations = rootProject.ext
    buildDir = file(rootProject.getBuildDir().toString() + "/" + getProject().getName())

    dependencies {
        compile project(":core")
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlinVersion}"
        implementation globalConfigurations.javaFxDependencies.implementation

        testImplementation globalConfigurations.commonDependencies.testImplementation
        testRuntimeOnly globalConfigurations.commonDependencies.testRuntimeOnly
    }

    javafx {
        version = globalConfigurations.javaFxVersion
        modules = ['javafx.controls']
    }

    configurations {
        testIntegrationImplementation.extendsFrom testImplementation
        testIntegrationRuntimeOnly.extendsFrom testRuntimeOnly
    }
    
    idea {
        module {
            testSourceDirs += file("$projectDir/src/testIntegration")
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }

            resources {
                srcDir 'src/main/resources'
            }
        }

        test {
            java {
                srcDirs = ['src/test']
            }
        }

        testIntegration {
            java {
                srcDirs = ['src/testIntegration']
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    task testIntegration(type: Test) {
        useJUnitPlatform()
        testClassesDirs = sourceSets.testIntegration.output.classesDirs
        classpath = sourceSets.testIntegration.runtimeClasspath
    }

    dependencies {
        testIntegrationCompile(sourceSets.main.output)
        testIntegrationImplementation rootProject.ext.javaFxDependencies.testIntegrationImplementation
    }
}